# Generated by Django 2.1 on 2018-08-20 12:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UUIDUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='uuiduser_set', related_query_name='user', to='auth.Group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='uuiduser_set', related_query_name='user', to='auth.Permission')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.CharField(max_length=255, verbose_name='Comentário')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
            ],
            options={
                'verbose_name': 'comentario',
                'verbose_name_plural': 'comentarios',
            },
        ),
        migrations.CreateModel(
            name='Lei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'lei',
                'verbose_name_plural': 'leis',
            },
        ),
        migrations.CreateModel(
            name='Proposta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='atualizado em')),
                ('nome', models.CharField(max_length=255, verbose_name='Lei')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propostas', to=settings.AUTH_USER_MODEL, verbose_name='UUIDUser')),
            ],
            options={
                'verbose_name': 'proposta',
                'verbose_name_plural': 'propostas',
            },
        ),
        migrations.CreateModel(
            name='Voto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voto', models.CharField(choices=[('Favor', 'Favor'), ('Contra', 'Contra')], default='Favor', max_length=6, verbose_name='Voto')),
                ('proposta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votos', to='sistema.Proposta', verbose_name='Proposta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votos', to=settings.AUTH_USER_MODEL, verbose_name='UUIDUser')),
            ],
            options={
                'verbose_name': 'voto',
                'verbose_name_plural': 'votos',
            },
        ),
        migrations.AddField(
            model_name='lei',
            name='nome',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leis', to='sistema.Proposta', verbose_name='Nome'),
        ),
        migrations.AddField(
            model_name='comentario',
            name='proposta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='sistema.Proposta', verbose_name='Proposta'),
        ),
        migrations.AddField(
            model_name='comentario',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to=settings.AUTH_USER_MODEL, verbose_name='UUIDUser'),
        ),
    ]
